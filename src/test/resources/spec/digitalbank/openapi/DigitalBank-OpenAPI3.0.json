openapi: 3.0.0
info:
  description: Digial Bank API provides Administration and User functionality through API
    Endpoints.
  version: API TOS
  title: Digital Bank API
  termsOfService: Terms of Service
  contact:
    name: Digital Bank
    url: www.demo.io
    email: digitalbank@demo.io
  license:
    name: License of API
    url: API License URL
tags:
  - name: account-controller
    description: Account Controller
  - name: authentication-controller
    description: Authentication Controller
  - name: credit-controller
    description: Credit Controller
  - name: health-check-controller
    description: Health Check Controller
  - name: promotion-controller
    description: Promotion Controller
  - name: search-controller
    description: Search Controller
  - name: static-data-controller
    description: Static Data Controller
  - name: user-controller
    description: User Controller
  - name: visa-controller
    description: Visa Controller
paths:
  /api/v1/account:
    get:
      tags:
        - account-controller
      summary: getAllAccounts
      operationId: getAllAccountsUsingGET
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  /api/v1/account/checking:
    get:
      tags:
        - account-controller
      summary: getAllCheckingAccounts
      operationId: getAllCheckingAccountsUsingGET
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  /api/v1/account/savings:
    get:
      tags:
        - account-controller
      summary: getAllSavingsAccounts
      operationId: getAllSavingsAccountsUsingGET
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  "/api/v1/account/{id}":
    get:
      tags:
        - account-controller
      summary: getAccount
      operationId: getAccountUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
    put:
      tags:
        - account-controller
      summary: updateAccount
      operationId: updateAccountUsingPUT
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
        - name: newName
          in: query
          description: newName
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
    delete:
      tags:
        - account-controller
      summary: deleteAccount
      operationId: deleteAccountUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
        - Bearer_token: []
      deprecated: false
  "/api/v1/account/{id}/coowner":
    get:
      tags:
        - account-controller
      summary: getCoOwner
      operationId: getCoOwnerUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
    put:
      tags:
        - account-controller
      summary: setCoOwner
      operationId: setCoOwnerUsingPUT
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
        - name: userId
          in: query
          description: userId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  "/api/v1/account/{id}/owner":
    get:
      tags:
        - account-controller
      summary: getOwner
      operationId: getOwnerUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  "/api/v1/account/{id}/transaction":
    get:
      tags:
        - account-controller
      summary: getAccountTransactions
      operationId: getAccountTransactionsUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
    post:
      tags:
        - account-controller
      summary: newTransaction
      operationId: newTransactionUsingPOST
      parameters:
        - name: action
          in: query
          description: action
          required: false
          schema:
            type: string
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewTransaction"
        description: newTransaction
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  "/api/v1/account/{id}/transfer":
    post:
      tags:
        - account-controller
      summary: transferFunds
      operationId: transferFundsUsingPOST
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransferFunds"
        description: transfer
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  /api/v1/auth:
    post:
      tags:
        - authentication-controller
      summary: authenticateUser
      operationId: authenticateUserUsingPOST
      parameters:
        - name: password
          in: query
          description: password
          required: true
          schema:
            type: string
        - name: username
          in: query
          description: username
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  "/api/v1/credit/account/{id}":
    get:
      tags:
        - credit-controller
      summary: getCreditCardDetails
      operationId: getCreditCardDetailsUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  "/api/v1/credit/account/{id}/billing":
    get:
      tags:
        - credit-controller
      summary: getCreditCardBillingDetails
      operationId: getCreditCardBillingDetailsUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  "/api/v1/credit/account/{id}/transactions":
    get:
      tags:
        - credit-controller
      summary: getCreditCardTransactionDetails
      operationId: getCreditCardTransactionDetailsUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  /api/v1/credit/reference:
    get:
      tags:
        - credit-controller
      summary: getCreditApplicationReference
      operationId: getCreditApplicationReferenceUsingGET_1
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
    post:
      tags:
        - credit-controller
      summary: submitCreditApplication
      operationId: submitCreditApplicationUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Application"
        description: application
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
    delete:
      tags:
        - credit-controller
      summary: deleteCreditApplicationReference
      operationId: deleteCreditApplicationReferenceUsingDELETE
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
        - Bearer_token: []
      deprecated: false
  "/api/v1/credit/reference/{id}":
    get:
      tags:
        - credit-controller
      summary: getCreditApplicationReference
      operationId: getCreditApplicationReferenceUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  /api/v1/credit/references:
    get:
      tags:
        - credit-controller
      summary: creditApplications
      operationId: creditApplicationsUsingGET
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  /api/v1/data/account/ownership/type:
    get:
      tags:
        - static-data-controller
      summary: getAccountOwndershipTypes
      operationId: getAccountOwndershipTypesUsingGET
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  /api/v1/data/account/standing:
    get:
      tags:
        - static-data-controller
      summary: getAccountStandings
      operationId: getAccountStandingsUsingGET
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  /api/v1/data/account/transaction/category:
    get:
      tags:
        - static-data-controller
      summary: getAccountTransactionCategories
      operationId: getAccountTransactionCategoriesUsingGET
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  /api/v1/data/account/transaction/state:
    get:
      tags:
        - static-data-controller
      summary: getAccountTransactionStates
      operationId: getAccountTransactionStatesUsingGET
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  /api/v1/data/account/transaction/type:
    get:
      tags:
        - static-data-controller
      summary: getAccountTransactionTypes
      operationId: getAccountTransactionTypesUsingGET
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  /api/v1/data/account/type:
    get:
      tags:
        - static-data-controller
      summary: getAccountTypes
      operationId: getAccountTypesUsingGET
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  /api/v1/data/account/type/checking:
    get:
      tags:
        - static-data-controller
      summary: getCheckingAccountTypes
      operationId: getCheckingAccountTypesUsingGET
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  /api/v1/data/account/type/savings:
    get:
      tags:
        - static-data-controller
      summary: getSavingsAccountTypes
      operationId: getSavingsAccountTypesUsingGET
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  /api/v1/external/visa:
    get:
      tags:
        - visa-controller
      summary: directVisaPayment
      operationId: directVisaPaymentUsingGET
      parameters:
        - name: account
          in: query
          description: account
          required: true
          schema:
            type: string
        - name: amount
          in: query
          description: amount
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  /api/v1/health:
    get:
      tags:
        - health-check-controller
      summary: getApplicationHealth
      operationId: getApplicationHealthUsingGET
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  /api/v1/promotions:
    post:
      tags:
        - promotion-controller
      summary: determinePromotions
      operationId: determinePromotionsUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PromotionCandidate"
        description: candidate
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  /api/v1/search/atm:
    get:
      tags:
        - search-controller
      summary: searchAtmLocations
      operationId: searchAtmLocationsUsingGET
      parameters:
        - name: zipcode
          in: query
          description: zipcode
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  /api/v1/user:
    get:
      tags:
        - user-controller
      summary: getUser
      operationId: getUserUsingGET_1
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
    post:
      tags:
        - user-controller
      summary: createNewUser
      operationId: createNewUserUsingPOST
      parameters:
        - name: role
          in: query
          description: role
          required: false
          schema:
            type: string
            default: USER
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewUser"
        description: newUser
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  /api/v1/user/account:
    get:
      tags:
        - account-controller
      summary: getAccounts
      operationId: getAccountsUsingGET
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
    post:
      tags:
        - account-controller
      summary: createAccount
      operationId: createAccountUsingPOST
      requestBody:
        $ref: "#/components/requestBodies/NewAccount"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  /api/v1/user/account/checking:
    get:
      tags:
        - account-controller
      summary: getCheckingAccounts
      operationId: getCheckingAccountsUsingGET
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  /api/v1/user/account/savings:
    get:
      tags:
        - account-controller
      summary: getSavingsAccounts
      operationId: getSavingsAccountsUsingGET
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  /api/v1/user/find:
    get:
      tags:
        - user-controller
      summary: getUserByUsername
      operationId: getUserByUsernameUsingGET
      parameters:
        - name: username
          in: query
          description: username
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  /api/v1/user/password:
    put:
      tags:
        - user-controller
      summary: changePassword
      operationId: changePasswordUsingPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePassword"
        description: changePassword
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  /api/v1/user/profile:
    get:
      tags:
        - user-controller
      summary: getUserProfile
      operationId: getUserProfileUsingGET
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
    put:
      tags:
        - user-controller
      summary: updateUserProfile
      operationId: updateUserProfileUsingPUT
      requestBody:
        $ref: "#/components/requestBodies/UpdateUser"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  /api/v1/user/role:
    get:
      tags:
        - user-controller
      summary: getAuthority
      operationId: getAuthorityUsingGET
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  "/api/v1/user/{id}":
    get:
      tags:
        - user-controller
      summary: getUser
      operationId: getUserUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
    delete:
      tags:
        - user-controller
      summary: deleteUser
      operationId: deleteUserUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
        - Bearer_token: []
      deprecated: false
  "/api/v1/user/{id}/account":
    get:
      tags:
        - account-controller
      summary: getAccounts
      operationId: getAccountsUsingGET_1
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
    post:
      tags:
        - account-controller
      summary: createAccount
      operationId: createAccountUsingPOST_1
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: "#/components/requestBodies/NewAccount"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  "/api/v1/user/{id}/account/checking":
    get:
      tags:
        - account-controller
      summary: getCheckingAccounts
      operationId: getCheckingAccountsUsingGET_1
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  "/api/v1/user/{id}/account/savings":
    get:
      tags:
        - account-controller
      summary: getSavingsAccounts
      operationId: getSavingsAccountsUsingGET_1
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  "/api/v1/user/{id}/password":
    put:
      tags:
        - user-controller
      summary: setPassword
      operationId: setPasswordUsingPUT
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
        - name: newPassword
          in: query
          description: newPassword
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  "/api/v1/user/{id}/password/unexpire":
    put:
      tags:
        - user-controller
      summary: setPasswordUnexpired
      operationId: setPasswordUnexpiredUsingPUT
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
        - name: unexpire
          in: query
          description: unexpire
          required: true
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  "/api/v1/user/{id}/profile":
    get:
      tags:
        - user-controller
      summary: getUserProfile
      operationId: getUserProfileUsingGET_1
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
    put:
      tags:
        - user-controller
      summary: updateUserProfile
      operationId: updateUserProfileUsingPUT_1
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: "#/components/requestBodies/UpdateUser"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  "/api/v1/user/{id}/role":
    get:
      tags:
        - user-controller
      summary: getAuthority
      operationId: getAuthorityUsingGET_1
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
    put:
      tags:
        - user-controller
      summary: addAuthority
      operationId: addAuthorityUsingPUT
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
        - name: role
          in: query
          description: role
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
    delete:
      tags:
        - user-controller
      summary: removeAuthority
      operationId: removeAuthorityUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
        - name: role
          in: query
          description: role
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
        - Bearer_token: []
      deprecated: false
  "/api/v1/user/{id}/state/enable":
    put:
      tags:
        - user-controller
      summary: setUserEnabled
      operationId: setUserEnabledUsingPUT
      parameters:
        - name: enabled
          in: query
          description: enabled
          required: true
          schema:
            type: boolean
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  "/api/v1/user/{id}/state/unexpire":
    put:
      tags:
        - user-controller
      summary: setUserUnexpired
      operationId: setUserUnexpiredUsingPUT
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
        - name: unexpire
          in: query
          description: unexpire
          required: true
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  "/api/v1/user/{id}/state/unlock":
    put:
      tags:
        - user-controller
      summary: setUserUnlocked
      operationId: setUserUnlockedUsingPUT
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
        - name: unlock
          in: query
          description: unlock
          required: true
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
  /api/v1/users:
    get:
      tags:
        - user-controller
      summary: getAllUsers
      operationId: getAllUsersUsingGET
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - Bearer_token: []
      deprecated: false
servers:
  - url: //localhost:8080/bank
components:
  requestBodies:
    UpdateUser:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateUser"
      description: profile
      required: true
    NewAccount:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NewAccount"
      description: account
      required: true
  securitySchemes:
    Bearer_token:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    Application:
      type: object
      properties:
        agreeTerms:
          type: boolean
        annualIncome:
          type: number
        balanceTransfer:
          type: boolean
        bankStatus:
          type: string
        cashAdvance:
          type: boolean
        employmentStatus:
          type: string
        minimumCreditCard:
          type: number
        monthlyAutoLoan:
          type: number
        monthlyMortgage:
          type: number
        monthlyOtherLoan:
          type: number
        monthlySpend:
          type: number
      title: Application
    ChangePassword:
      type: object
      properties:
        currentPasword:
          type: string
        newPassword:
          type: string
      title: ChangePassword
    NewAccount:
      type: object
      properties:
        accountName:
          type: string
        accountTypeCode:
          type: string
        openingDeposit:
          type: number
        ownerTypeCode:
          type: string
      title: NewAccount
    NewTransaction:
      type: object
      properties:
        amount:
          type: number
        description:
          type: string
        transactionTypeCode:
          type: string
      title: NewTransaction
    NewUser:
      type: object
      properties:
        address:
          type: string
        country:
          type: string
        dob:
          type: string
          example: MM/dd/yyyy
        emailAddress:
          type: string
        firstName:
          type: string
        gender:
          type: string
        homePhone:
          type: string
        lastName:
          type: string
        locality:
          type: string
        mobilePhone:
          type: string
        password:
          type: string
        postalCode:
          type: string
        region:
          type: string
        ssn:
          type: string
        title:
          type: string
        workPhone:
          type: string
      title: NewUser
    PromotionCandidate:
      type: object
      properties:
        accountType:
          type: string
        age:
          type: integer
          format: int32
        balance:
          type: number
        rating:
          type: integer
          format: int32
        years:
          type: integer
          format: int32
      title: PromotionCandidate
    TransferFunds:
      type: object
      properties:
        amount:
          type: number
        toAccountId:
          type: integer
          format: int64
      title: TransferFunds
    UpdateUser:
      type: object
      properties:
        address:
          type: string
        country:
          type: string
        firstName:
          type: string
        gender:
          type: string
        homePhone:
          type: string
        lastName:
          type: string
        locality:
          type: string
        mobilePhone:
          type: string
        postalCode:
          type: string
        region:
          type: string
        title:
          type: string
        workPhone:
          type: string
      title: UpdateUser