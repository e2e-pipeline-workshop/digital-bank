name: build 
run-name: Build executed by @${{ github.actor }}

on: pull_request

jobs:
  unit_tests_linters_sast:
    name: Run Unit Tests, Linters and SAST
    runs-on: ubuntu-latest
    steps:
        ##########################
        # Checkout the code base #
        ##########################
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          # Full git history is needed to get a proper
          # list of changed files within `super-linter`
          fetch-depth: 0

        ################################
        # Run Linter against code base #
        ################################
      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        ##########################
        # Setup Java 11          #
        ##########################
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

        ##########################
        # Execute Unit Tests     #
        ##########################
      - name: Run Unit Tests
        run: mvn test

      - name: Run SAST checks
        continue-on-error: true
        uses: AppThreat/sast-scan-action@master
        with:
          output: reports
          type: java

      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: sast-scan-reports
          path: reports
          
  build:
    runs-on: ubuntu-latest
    needs: [unit_tests_linters_sast]
    
    steps: 
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build with Maven
        run: mvn -DskipTests -B package --no-transfer-progress --file ./pom.xml

      - name: rename Artefakt
        run: mv ./target/*digitalbank*.war ./target/digibank.war
        
      - uses: actions/upload-artifact@master
        with:
          name: digibank.war
          path: ./target/digibank*

  prepare_env:
    runs-on: ubuntu-latest
    needs: [build]

    steps: 
      - name: just a step 
        run: "ls -la ."
      
      #- name: 'cleanup destination at $UAT_IP'
      #  uses: appleboy/ssh-action@master
      #  with:
      #    host: ${{ env.UAT_IP }}
      #    username: ${{ secrets.USER }}
      #    key: ${{ secrets.SSH_KEY }}
      #    port: ${{ env.UAT_PORT }}
      #    script: rm -rf ./deployment/*

  deploy: 
    runs-on: ubuntu-latest
    needs: [prepare_env]
    
    steps: 
      - uses: actions/download-artifact@v3
        with:
          name: digibank.war
          path: digibank/
         
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: digibank/

    #  - name: copy file via ssh password
    #    uses: appleboy/scp-action@master
    #    with:
    #      host: ${{ env.UAT_IP }}
    #      username: ${{ secrets.USER }}
    #      key: ${{ secrets.SSH_KEY }}
    #      port: ${{ env.UAT_PORT }}
    #      source: './target/digibank.war'
    #      target: 'deployment'
    #      debug: true

    #  automation_tests:
#    needs: install # install
#    environment: UAT
#    name: Trigger E2E Tests on UAT Environment
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Trigger Workflow from e2e tests with Playwright
#        run: |
#          curl -X POST \
#          -H "Authorization: Bearer ${{ secrets.PAT }}" \
#          -H "Accept: application/vnd.github.v3+json" \
#          https://api.github.com/repos/e2e-pipeline-workshop/digibank-playwright-tests/actions/workflows/run-tests.yml/dispatches \
#          -d '{"ref":"main","inputs":{"SUT":"http://$UAT_IP:8080/bank/login","environment":"UAT"}}'          
#
